<%- include('header') %>
<%- include('navbar') %>

    <!-- Main Content -->
    <div class="container mt-4">
        <div class="row">
            <div class="col-2">
                <!-- Buttons -->
                <div class="container mb-4">
                    <div class="row">
                        
                    </div>
                </div>
            </div>
            <div class="col-10">
                <div class="mb-4">
                    <label for="name" class="form-label h4">Name</label>
                    <input type="text" class="form-control" id="name" placeholder="Enter meal name" required>
                </div>
                <!-- Ingredients -->
                <div class="card bg text-dark p-3 mb-4">
                    <div class="row mb-4">
                        <div class="col-2">
                            <h5>Ingredient</h5>
                        </div>
                        <div class="col-2">
                            <h5>Calorie</h5>
                        </div>
                        <div class="col-2">
                            <h5>Carbs</h5>
                        </div>
                        <div class="col-2">
                            <h5>Protein</h5>
                        </div>
                        <div class="col-2">
                            <h5>Fat</h5>
                        </div>
                    </div>
                    <div id="ingredient-list">
                        <!-- Rows will be dynamically added here -->
                    </div>
                </div>
                <div>
                    <label for="ingredient" class="form-label h4 mt-2">Add Ingredient (g)</label>
                    <div class="row mb-4">
                        <div class="col-4">
                            <select class="form-select mb-3" id="ingredient-select" aria-label="Default select example">
                                <option selected>Select an ingredient</option>
                                <% ingredients.forEach(function(ingredient) { %>
                                    <option value="<%= ingredient._id %>"><%= ingredient.name %></option>
                                 <% }); %>
                            </select>
                        </div>
                        <div class="col-4">
                            <input type="number" class="form-control" id="amount" placeholder="Enter amount" required>
                        </div>
                        <div class="col-4">
                            <button class="btn btn-dark" id="add-ingredient-btn">Add Ingredient</button>
                        </div>
                    </div>
                </div>
                <div class="mt-4">
                    <button class="btn btn-dark" onclick=createReceipt()>Create Reciept</button>
                </div>
            </div>
        </div>
    </div>

<script>
    const ingredients = <%- JSON.stringify(ingredients) %>;
    console.log('Ingredients from server:', ingredients);
    const tempIngredients = [];

    // Add Ingredient Button Click Event
    document.getElementById('add-ingredient-btn').addEventListener('click', () => {
        console.log('Add Ingredient button clicked!');
        const ingredientSelect = document.getElementById('ingredient-select');
        const amountInput = document.getElementById('amount');
        const ingredientList = document.getElementById('ingredient-list');

        // Get selected ingredient details
        const selectedOption = ingredientSelect.options[ingredientSelect.selectedIndex];
        const ingredientId = selectedOption.value;
        const ingredientName = selectedOption.text;
        const selectedIngredient = ingredients.find(ingredient => ingredient._id === ingredientId);
        if (!selectedIngredient) {
            alert('Ingredient not found!');
            return;
        }
        if (tempIngredients.some(ingredient => ingredient.id === ingredientId)) {
            alert('Ingredient already added!');
            return;
        }
        const calorie = selectedIngredient.carbs * 4 + selectedIngredient.protein * 4 + selectedIngredient.fat * 9; // Calculate calorie based on macros
        const amount = parseFloat(amountInput.value);

        // Validate input
        if (!ingredientId || ingredientId === 'Select an ingredient' || isNaN(amount) || amount <= 0) {
            alert('Please select a valid ingredient and enter a valid amount.');
            return;
        }

        // Calculate values based on amount
        const totalCalorie = ((calorie * amount) / 100).toFixed(2);
        const totalCarbs = ((selectedIngredient.carbs * amount) / 100).toFixed(2);
        const totalProtein = ((selectedIngredient.protein * amount) / 100).toFixed(2);
        const totalFat = ((selectedIngredient.fat * amount) / 100).toFixed(2);

        // Add ingredient to the temporary list
        tempIngredients.push({
            id: ingredientId,
            name: ingredientName,
            calorie: totalCalorie,
            carbs: totalCarbs,
            protein: totalProtein,
            fat: totalFat,
            amount: amount
        });

        // Update the DOM
        const row = document.createElement('div');
        row.className = 'row mb-2';
        row.innerHTML = `
            <div class="col-2"><p>${ingredientName}</p></div>
            <div class="col-2"><p>${totalCalorie} kcal</p></div>
            <div class="col-2"><p>${totalCarbs} g</p></div>
            <div class="col-2"><p>${totalProtein} g</p></div>
            <div class="col-2"><p>${totalFat} g</p></div>
            <div class="col-2">
                <button class="btn btn-dark btn-sm" onclick="removeIngredient('${ingredientId}', this)">Delete</button>
            </div>
        `;
        ingredientList.appendChild(row);

        // Clear input fields
        ingredientSelect.selectedIndex = 0;
        amountInput.value = '';
    });

    // Remove Ingredient Function
    function removeIngredient(id, button) {
        // Remove from the temporary list
        const index = tempIngredients.findIndex(ingredient => ingredient.id === id);
        if (index !== -1) {
            tempIngredients.splice(index, 1);
        }

        // Remove the row from the DOM
        const row = button.parentElement.parentElement;
        row.remove();
    }

    // Submit Form Function (if needed)
    function createReceipt() {
        const name = document.getElementById('name').value;
        if (!name) {
            alert('Please enter a meal name.');
            return;
        }

        if (tempIngredients.length === 0) {
            alert('Please add at least one ingredient.');
            return;
        }

        // Here you can send the tempIngredients to the server or handle them as needed
        console.log('Submitting form with ingredients:', tempIngredients);

        ingredientsToSend = tempIngredients.map(ingredient => ({
            _ingredientId: ingredient.id,
            calorie: ingredient.calorie,
            amount: ingredient.amount
        }));

        // Example: Send to server (uncomment and modify as needed)
        fetch('/reciept/new', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ name, ingredients: ingredientsToSend }),
        })
        .then(response => response.json())
        .catch(error => console.error('Error:', error));
    }
</script>


<%- include('footer') %>
